(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{406:function(s,e,t){"use strict";t.r(e);var a=t(42),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"elasticsearch-swap-off"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-swap-off"}},[s._v("#")]),s._v(" Elasticsearch Swap off")]),s._v(" "),t("p",[s._v("Elasticsearch를 올려놓은 서버가 swap 메모리를 풀로 다 쓰는 문제가 발생했다. 찾아보니 설정없이 Elasticsearch를 실행하면 swap 메모리를 사용하므로 swap off 설정을 진행하며 발생한 이슈 해결과정을 정리한다.")]),s._v(" "),t("hr"),s._v(" "),t("ol",[t("li",[s._v("bootstrap.memory_lock 설정 활성화")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("elasticsearch_path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("/config/elasticsearch.yml \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 아래와 같이 수정한다.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ----------------------------------- Memory -----------------------------------")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lock the memory on startup:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\nbootstrap.memory_lock: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Make sure that the heap size is set to about half the memory available")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# on the system and that the owner of the process is allowed to use this")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# limit.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Elasticsearch performs poorly when the system is swapping the memory.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n")])])]),t("br"),s._v(" "),t("p",[s._v("bootstrap.memory_lock 설정을 활성화한 후 elasticsearch를 실행하였는데 아래와 같은 로그를 남기며 elasticsearch가 정상적으로 구동하지 않는 문제가 발생했다.")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[2020-05-11T13:51:29,683][WARN ][o.e.b.JNANatives         ] [server] This can result in part of the JVM being swapped out.\n[2020-05-11T13:51:29,683][WARN ][o.e.b.JNANatives         ] [server] Increase RLIMIT_MEMLOCK, soft limit: 65536, hard limit: 65536\n[2020-05-11T13:51:29,683][WARN ][o.e.b.JNANatives         ] [server] These can be adjusted by modifying /etc/security/limits.conf, for example:\n    # allow user 'user' mlockall\n    user soft memlock unlimited\n    user hard memlock unlimited\n...\n...\n[2020-05-11T15:00:31,219][ERROR][o.e.b.Bootstrap          ] [server] node validation exception\n[1] bootstrap checks failed\n[1]: memory locking requested for elasticsearch process but memory is not locked\n[2020-05-11T15:00:31,221][INFO ][o.e.n.Node               ] [server] stopping ...\n[2020-05-11T15:00:31,272][INFO ][o.e.n.Node               ] [server] stopped\n[2020-05-11T15:00:31,272][INFO ][o.e.n.Node               ] [server] closing ...\n[2020-05-11T15:00:31,287][INFO ][o.e.n.Node               ] [server] closed\n")])])]),t("p",[s._v("위와 같은 로그를 남기며 정상적으로 실행이 안된다. 이때 아래의 절차를 수행한다.")]),s._v(" "),t("br"),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[s._v("user의 메모리 락 제한 없애기"),t("br"),s._v("\n위의 로그에서 나온 allow user 'user' mlockall 에서 user 부분의 사용자 이름에 대해 메모리락 제한을 없애준다.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/security/limits.conf\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#<domain>      <type>  <item>         <value>")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#ftp             hard    nproc           0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#@student        -       maxlogins       4")]),s._v("\n\nuser            soft     memlock         unlimited\nuser            hard     memlock         unlimited\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 아래처럼 한 줄로 변경해도 가능하다.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# user            -        memlock         unlimited ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# End of file")]),s._v("\n")])])])])]),s._v(" "),t("br"),s._v(" "),t("p",[s._v("해당 설정 후 elasticsearch를 실행했을 때 똑같은 에러가 발생하였다."),t("br"),s._v("\n이러한 문제는 현재 로그인 세션에서는 limits.conf 설정값이 정상적으로 반영되지 않아서 똑같은 이슈가 발생하는 것이다.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("ulimit")]),s._v(" -l\nunlimited\n")])])]),t("p",[s._v("위와 같은 결과가 나오지 않으면 해당 세션을 종료 후 다시 서버에 접속하여 다시 ulimit 설정값을 확인 후 unlimited 값이 정상적으로 나오면 elasticsearch를 실행시킨다.")])])}),[],!1,null,null,null);e.default=n.exports}}]);