(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{377:function(r,t,v){"use strict";v.r(t);var _=v(42),a=Object(_.a)({},(function(){var r=this,t=r.$createElement,v=r._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[v("h1",{attrs:{id:"_14-점진적-개선"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_14-점진적-개선"}},[r._v("#")]),r._v(" 14. 점진적 개선")]),r._v(" "),v("h2",{attrs:{id:"목차"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#목차"}},[r._v("#")]),r._v(" 목차")]),r._v(" "),v("ol",[v("li",[v("a",{attrs:{href:"#Args-%EA%B5%AC%ED%98%84"}},[r._v("Args 구현")])]),r._v(" "),v("li",[v("a",{attrs:{href:"#%EA%B2%B0%EB%A1%A0"}},[r._v("결론")])])]),r._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"#%EC%A0%95%EC%A0%81-%ED%83%80%EC%9E%85-%EC%96%B8%EC%96%B4%EB%9E%80?"}},[r._v("정적 타입 언어란?")])])]),r._v(" "),v("hr"),r._v(" "),v("h3",{attrs:{id:"args-구현"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#args-구현"}},[r._v("#")]),r._v(" Args 구현")]),r._v(" "),v("p",[r._v("오류 코드 상수를 정의하는 부분이 장황하지만, "),v("a",{attrs:{href:"#%EC%A0%95%EC%A0%81-%ED%83%80%EC%9E%85-%EC%96%B8%EC%96%B4%EB%9E%80?"}},[r._v("정적 타입 언어")]),r._v("인 자바의 특성 때문")]),r._v(" "),v("ol",[v("li",[r._v("기능이 동작하는 코드를 먼저 구현"),v("br"),r._v("\n한가지 기능을 구현하며 코드가 뼈대가 생기지만 새로운 기능이 추가되면서 코드는 점점 망가지기 십상")]),r._v(" "),v("li",[r._v("점진적으로 개선"),v("br"),r._v("\n기능을 구현하는 중에도 피쳐 단위로 리팩토링을 통해 코드를 깨끗하게 유지하도록 해야 함"),v("br"),r._v("\n개선하는 과정에서 코드의 구조를 크게 변경하면 기능에도 영향을 줄 수 있고, 문제가 생겼을 때 이전 상태로 돌아가기도 어려우므로 TDD 기법을 사용하는게 좋음")])]),r._v(" "),v("br"),r._v(" "),v("h3",{attrs:{id:"결론"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#결론"}},[r._v("#")]),r._v(" 결론")]),r._v(" "),v("p",[r._v("단순히 돌아가는 코드에 만족하는 프로그래머는 전문가 정신이 부족한 것이다."),v("br"),r._v("\n나쁜 코드를 좋은 코드로 개선할 수 있지만 엄청난 비용이 필요하다."),v("br"),r._v("\n코드는 언제나 최대한 깔끔하고 단순하게 정리하자.")]),r._v(" "),v("hr"),r._v(" "),v("br"),r._v(" "),v("h2",{attrs:{id:"추가-정리"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#추가-정리"}},[r._v("#")]),r._v(" 추가 정리")]),r._v(" "),v("h3",{attrs:{id:"정적-동적-타입-언어란"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#정적-동적-타입-언어란"}},[r._v("#")]),r._v(" 정적/동적 타입 언어란?")]),r._v(" "),v("ul",[v("li",[v("p",[r._v("정적 타입 언어"),v("br"),r._v("\n컴파일 시간에 변수의 타입이 결정되는 언어"),v("br"),r._v("\nJava, C, C++와 같은 언어가 대표적이며, 프로그래머가 변수의 타입을 직접 명시해 주어야 함"),v("br"),r._v("\n장점 ?")]),r._v(" "),v("ul",[v("li",[r._v("컴파일 시에 타입에 대한 정보를 결정하기 때문에 속도 ↑")]),r._v(" "),v("li",[r._v("타입 에러로 인한 문제점을 초기에 발견 가능하여 타입의 안정성 ↑")])])]),r._v(" "),v("li",[v("p",[r._v("동적 타입 언어"),v("br"),r._v("\n런타임에 타입이 결정됨"),v("br"),r._v("\nPerl, Ruby, Python, JavaScript"),v("br"),r._v("\n장점 ?")]),r._v(" "),v("ul",[v("li",[r._v("Runtime까지 타입에 대한 결정을 미룰 수 있기 때문에 다양한 선택이 가능")])]),r._v(" "),v("p",[r._v("단점?")]),r._v(" "),v("ul",[v("li",[r._v("배우기 쉬움")]),r._v(" "),v("li",[r._v("실행 도중 변수에 예상치 못한 타입이 들어오는 경우 Type Error 발생")])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);